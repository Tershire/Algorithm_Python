# Q02_reverse_string.py
# LeetCode #344

# Tershire
# 2023 SEP 24


# KEY TAKEAWAY ****************************************************************
# > list flip & update
# <M1> s     = s[::-1]
# <M2> s[:]  = s[::-1]
# <M3> s[::] = s[::-1]

# <M*> s.reverse() 

# case ////////////////////////////////////////////////////////////////////////
s = ["H", "a", "n", "n", "a", "h"]


# algo ////////////////////////////////////////////////////////////////////////
# -----------------------------------------------------------------------------
# slicing
# 196 [ms]
def f1(s: list[str]) -> None:
    s[::] = s[::-1]


# -----------------------------------------------------------------------------
# two-pointer
# 198 [ms]
def f2(s: list[str]) -> None:
    for i in range(len(s) // 2):
        temp_letter = s[-i - 1]
        s[-i - 1] = s[i]
        s[i] = temp_letter


# -----------------------------------------------------------------------------
# two-pointer
# 198 [ms]
def f2a(s: list[str]) -> None:
    for i in range(len(s) // 2):
        s[i], s[-i - 1] = s[-i - 1], s[i]


# -----------------------------------------------------------------------------
# two-pointer
# 198 [ms]
def f1B(s: list[str]) -> None:
    i_L, i_R = 0, len(s) - 1
    while i_L < i_R:
        s[i_L], s[i_R] = s[i_R], s[i_L]
        i_L += 1
        i_R -= 1


# -----------------------------------------------------------------------------
# .reverse()
# 198 [ms]
def f2B(s: list[str]) -> None:
    s.reverse()


# test ////////////////////////////////////////////////////////////////////////
# f1(s)
# f2(s)
# f2a(s)
# f1B(s)
f2B(s)
print(s)
